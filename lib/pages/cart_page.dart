import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:lotto_application/pages/home.dart';
import 'package:lotto_application/pages/navmenu.dart';
import 'package:provider/provider.dart';
import 'package:lotto_application/pages/cart_provider.dart';

class CartPage extends StatefulWidget {
  // üìÑ ‡∏´‡∏ô‡πâ‡∏≤ Cart ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
  const CartPage({super.key});

  @override
  State<CartPage> createState() => _CartPageState();
}

class _CartPageState extends State<CartPage> {
  @override
  Widget build(BuildContext context) {
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô CartProvider
    final cartProvider = Provider.of<CartProvider>(context);
    final red = const Color(0xFFAD0101); // üé® ‡∏™‡∏µ‡πÅ‡∏î‡∏á
    final gold = const Color(0xFFE3BB66); // üé® ‡∏™‡∏µ‡∏ó‡∏≠‡∏á
    final green = const Color.fromARGB(255, 8, 224, 62); 

    return Container(
      // // üñº ‡πÉ‡∏™‡πà‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏ô‡πâ‡∏≤
      decoration: const BoxDecoration(
        image: DecorationImage(
          image: AssetImage('assets/image/bg4.png'), // ‚úÖ ‡∏£‡∏π‡∏õ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á
          fit: BoxFit.cover, // ‡πÉ‡∏´‡πâ‡πÄ‡∏ï‡πá‡∏°‡∏à‡∏≠
        ),
      ),
      child: Scaffold(
        backgroundColor: Colors.transparent, // üîπ ‡∏ó‡∏≥ Scaffold ‡πÇ‡∏õ‡∏£‡πà‡∏á‡πÉ‡∏™
        appBar: AppBar(
          // üî∫ ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß‡∏™‡∏µ‡πÅ‡∏î‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô
          backgroundColor: red,
          shape: const RoundedRectangleBorder(
            borderRadius: BorderRadius.vertical(bottom: Radius.circular(20)),
          ),
          toolbarHeight: 80, // üìè ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡πÅ‡∏ñ‡∏ö‡∏´‡∏±‡∏ß
          title: Text(
            '‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤',
            style: GoogleFonts.itim(
              textStyle: const TextStyle(
                fontWeight: FontWeight.bold,
                fontSize: 30,
                color: Colors.white,
              ),
            ),
          ),
          //‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
          leading: IconButton(
            icon: const Icon(Icons.arrow_back, color: Colors.white),
            onPressed: () {
              Navigator.pushReplacement(
                context,
                MaterialPageRoute(
                  builder: (context) => const HomeScreen(username: ''),
                ),
              );
            },
          ),
        ),
        body: ListView(
          padding: const EdgeInsets.fromLTRB(16, 16, 16, 32),
          children: [
            Text(
              '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£',
              style: GoogleFonts.itim(
                textStyle: const TextStyle(
                  fontWeight: FontWeight.bold,
                  fontSize: 25,
                  color: Color(0xFFAD0101),
                ),
              ),
            ),
            const SizedBox(height: 16),
            // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å provider
            ...cartProvider.items.map(
              (item) => _CartItemTile(
                item: item,
                onChangedSelected: (v) =>
                    cartProvider.toggleItemSelection(item.id, v ?? false),
                onChangedNumber: (text) => setState(() => item.number = text),
              ),
            ),
            const SizedBox(height: 20),
            // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å provider
            _summaryRow('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', '${cartProvider.selectedCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£'),
            const SizedBox(height: 12),
            // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å provider
            _summaryRow('‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°', '${cartProvider.total} ‡∏ö‡∏≤‡∏ó'),

            // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ
            const SizedBox(height: 20),
            ElevatedButton(
              style: ElevatedButton.styleFrom(
                backgroundColor: green,
                minimumSize: const Size.fromHeight(50),
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(12),
                ),
              ),
              onPressed: () {
                // ‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°
              },
              child: const Text('‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠', style: TextStyle(fontSize: 18)),
            ),
          ],
        ),
        bottomNavigationBar:
            const MyBottomNavigationBar(), //‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ö‡∏≤‡∏£‡πå‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏°‡∏≤
      ),
    );
  }

  Widget _summaryRow(String label, String value) => Container(
    // üìä ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°
    height: 48,
    padding: const EdgeInsets.symmetric(horizontal: 16),
    decoration: BoxDecoration(
      color: const Color.fromARGB(255, 227, 187, 102), // üé® ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏Å‡∏•‡πà‡∏≠‡∏á
      borderRadius: BorderRadius.circular(14),
    ),
    child: Row(
      mainAxisAlignment: MainAxisAlignment.spaceBetween,
      children: [
        Text(
          label,
          style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
        ),
        Text(
          value,
          style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
        ),
      ],
    ),
  );
}

class _CartItemTile extends StatelessWidget {
  // üßæ ‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡∏ö checkbox ‡∏≠‡∏¢‡∏π‡πà‡∏ô‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡πå‡∏î
  const _CartItemTile({
    required this.item,
    required this.onChangedSelected,
    required this.onChangedNumber,
  });

  final CartItem item; // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏∏‡∏î
  final ValueChanged<bool?> onChangedSelected; // toggle ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å/‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  final ValueChanged<String>
  onChangedNumber; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏•‡∏Ç (‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡∏£‡∏±‡∏ö callback ‡πÑ‡∏ß‡πâ ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï)

  // üîß ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡∏£‡∏£‡∏Ñ ‡πÄ‡∏ä‡πà‡∏ô "1 2 3 4 5 6"
  String _formatDigits(String s) {
    final digits = s.replaceAll(RegExp(r'[^0-9]'), '');
    final six = digits.length > 6 ? digits.substring(0, 6) : digits;
    return six.split('').join(' ');
  }

  @override
  Widget build(BuildContext context) {
    final red = const Color(0xFFAD0101); // ‡∏™‡∏µ‡πÅ‡∏î‡∏á‡πÉ‡∏ô‡∏†‡∏≤‡∏û
    final gold = const Color(0xFFE3BB66); // ‡∏™‡∏µ‡∏ó‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏ö‡∏ô‡∏≠‡∏Å

    return Row(
      crossAxisAlignment: CrossAxisAlignment.center,
      children: [
        // ‚¨ÖÔ∏è ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏ï‡∏¥‡πä‡∏Å‡∏≠‡∏¢‡∏π‡πà ‚Äú‡∏ô‡∏≠‡∏Å‚Äù ‡∏Å‡∏≤‡∏£‡πå‡∏î
        _TickBox(
          checked: item.selected,
          onTap: () => onChangedSelected(!item.selected),
        ),
        const SizedBox(width: 8),

        // üü® ‡∏Å‡∏£‡∏≠‡∏ö‡∏ó‡∏≠‡∏á + üü• ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÅ‡∏î‡∏á
        Expanded(
          child: Container(
            margin: const EdgeInsets.only(bottom: 16),
            padding: const EdgeInsets.all(6),
            decoration: BoxDecoration(
              color: gold,
              borderRadius: BorderRadius.circular(24),
            ),
            child: Container(
              padding: const EdgeInsets.fromLTRB(16, 12, 16, 16),
              decoration: BoxDecoration(
                color: red,
                borderRadius: BorderRadius.circular(20),
              ),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    '‡∏ä‡∏∏‡∏î‡∏ó‡∏µ‡πà ${item.id}',
                    style: const TextStyle(
                      color: Colors.white,
                      fontWeight: FontWeight.w900,
                      fontSize: 16,
                    ),
                  ),
                  const SizedBox(height: 10),
                  Row(
                    children: [
                      Expanded(
                        child: Container(
                          height: 40,
                          padding: const EdgeInsets.symmetric(horizontal: 16),
                          decoration: BoxDecoration(
                            color: Colors.white,
                            borderRadius: BorderRadius.circular(10),
                            boxShadow: const [
                              BoxShadow(
                                color: Colors.black26,
                                blurRadius: 2,
                                offset: Offset(0, 4),
                              ),
                            ],
                          ),
                          alignment: Alignment.centerLeft,
                          child: Text(
                            _formatDigits(
                              item.number.isNotEmpty ? item.number : '123456',
                            ),
                            style: const TextStyle(
                              fontWeight: FontWeight.w700,
                              fontSize: 20,
                              color: Colors.black87,
                            ),
                            maxLines: 1,
                            overflow: TextOverflow.clip,
                          ),
                        ),
                      ),
                      const SizedBox(width: 16),
                      const Text(
                        '‡∏£‡∏≤‡∏Ñ‡∏≤',
                        style: TextStyle(
                          color: Colors.white,
                          fontWeight: FontWeight.w900,
                          fontSize: 16,
                        ),
                      ),
                      const SizedBox(width: 8),
                      Container(
                        padding: const EdgeInsets.symmetric(
                          horizontal: 15,
                          vertical: 5,
                        ),
                        decoration: BoxDecoration(
                          color: Colors.white,
                          borderRadius: BorderRadius.circular(100),
                        ),
                        child: Text(
                          '${item.price}',
                          style: const TextStyle(
                            fontWeight: FontWeight.w700,
                            fontSize: 15,
                            color: Colors.black,
                          ),
                        ),
                      ),
                      const SizedBox(width: 8),
                      const Text(
                        '‡∏ö‡∏≤‡∏ó',
                        style: TextStyle(
                          color: Colors.white,
                          fontWeight: FontWeight.w900,
                          fontSize: 16,
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ),
        ),
      ],
    );
  }
}

class _TickBox extends StatelessWidget {
  const _TickBox({required this.checked, required this.onTap});

  final bool checked;
  final VoidCallback onTap;

  @override
  Widget build(BuildContext context) {
    return InkWell(
      borderRadius: BorderRadius.circular(8),
      onTap: onTap,
      child: Container(
        width: 32,
        height: 32,
        decoration: BoxDecoration(
          color: checked ? const Color(0xFFD92323) : Colors.white,
          borderRadius: BorderRadius.circular(10),
          border: Border.all(color: const Color(0xFFD92323), width: 2),
        ),
        alignment: Alignment.center,
        child: Icon(
          Icons.check,
          size: 20,
          color: checked ? Colors.white : Colors.transparent,
        ),
      ),
    );
  }
}
