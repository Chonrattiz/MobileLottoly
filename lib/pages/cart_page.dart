//‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤
import 'package:flutter/material.dart';

class CartItem {
  // üì¶ Model ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡∏∏‡∏î
  CartItem({
    required this.id,
    required this.price,
    this.selected = true,
    this.number = '',
  });

  final String id; // üÜî ‡πÄ‡∏•‡∏Ç‡∏ä‡∏∏‡∏î
  final int price; // üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤
  bool selected; // ‚úÖ ‡∏ï‡∏¥‡πä‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  String number; // üî¢ ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å
}

class CartPage extends StatefulWidget {
  // üìÑ ‡∏´‡∏ô‡πâ‡∏≤ Cart ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
  const CartPage({super.key});

  @override
  State<CartPage> createState() => _CartPageState();
}

class _CartPageState extends State<CartPage> {
  final List<CartItem> _items = [
    // üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ mock
    CartItem(id: '60', price: 80),
    CartItem(id: '99', price: 80),
    CartItem(id: '80', price: 80),
  ];

  int get selectedCount =>
      _items.where((e) => e.selected).length; // üî¢ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  int get total => _items
      .where((e) => e.selected)
      .fold(0, (sum, e) => sum + e.price); // üíµ ‡∏£‡∏ß‡∏°‡∏£‡∏≤‡∏Ñ‡∏≤

  @override
  Widget build(BuildContext context) {
    final red = const Color(0xFFD92323); // üé® ‡∏™‡∏µ‡πÅ‡∏î‡∏á
    final gold = const Color(0xFFFFD97B); // üé® ‡∏™‡∏µ‡∏ó‡∏≠‡∏á

    return Container(
      // // üñº ‡πÉ‡∏™‡πà‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏ô‡πâ‡∏≤
      decoration: const BoxDecoration(
        image: DecorationImage(
          image: AssetImage('assets/images/bg4.png'), // ‚úÖ ‡∏£‡∏π‡∏õ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á
          fit: BoxFit.cover, // ‡πÉ‡∏´‡πâ‡πÄ‡∏ï‡πá‡∏°‡∏à‡∏≠
        ),
      ),
      child: Scaffold(
        backgroundColor: Colors.transparent, // üëà ‡∏ï‡πâ‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πà‡∏á‡πÉ‡∏™
        appBar: AppBar(
          // üî∫ ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß‡∏™‡∏µ‡πÅ‡∏î‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô
          backgroundColor: red,
          shape: const RoundedRectangleBorder(
            borderRadius: BorderRadius.vertical(bottom: Radius.circular(20)),
          ),
          toolbarHeight: 80, // üìè ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡πÅ‡∏ñ‡∏ö‡∏´‡∏±‡∏ß
          title: const Text(
            '‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤',
            style: TextStyle(fontWeight: FontWeight.bold, fontSize: 22),
          ), // üßæ ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤
          centerTitle: true,
          leading: IconButton(
            // üîô ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
            icon: const Icon(Icons.arrow_back, color: Colors.white),
            onPressed: () {},
          ),
        ),
        body: ListView(
          // üîª ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô scroll ‡πÑ‡∏î‡πâ
          padding: const EdgeInsets.fromLTRB(16, 16, 16, 32),
          children: [
            const Text(
              '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£',
              style: TextStyle(
                fontWeight: FontWeight.bold,
                fontSize: 18,
                color: Color(0xFFD92323),
              ),
            ), // üßæ ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£"
            const SizedBox(height: 16),
            ..._items.map(
              (item) => _CartItemTile(
                // üßæ ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡∏∏‡∏î‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
                item: item,
                onChangedSelected: (v) =>
                    setState(() => item.selected = v ?? false),
                onChangedNumber: (text) => setState(() => item.number = text),
              ),
            ),
            const SizedBox(height: 20),
            _summaryRow(
              '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô',
              '$selectedCount ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£',
            ), // üìä ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
            const SizedBox(height: 12),
            _summaryRow('‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°', '$total ‡∏ö‡∏≤‡∏ó'), // üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
            const SizedBox(height: 20),
            ElevatedButton(
              // ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß ‚Äú‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‚Äù
              style: ElevatedButton.styleFrom(
                backgroundColor: Colors.green,
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(16),
                ),
                minimumSize: const Size.fromHeight(52),
              ),
              onPressed: selectedCount == 0 ? null : () {},
              child: const Text(
                '‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠',
                style: TextStyle(
                  color: Colors.white,
                  fontSize: 18,
                  fontWeight: FontWeight.bold,
                ),
              ),
            ),
            const SizedBox(height: 40), // ‚ûï ‡πÄ‡∏ß‡πâ‡∏ô‡∏ó‡πâ‡∏≤‡∏¢‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
          ],
        ),
        bottomNavigationBar: Container(
          // üîª ‡πÅ‡∏ñ‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á
          height: 72,
          decoration: const BoxDecoration(color: Color(0xFFD92323)),
          child: Row(
            mainAxisAlignment: MainAxisAlignment.spaceAround,
            children: const [
              _BottomBarIcon(
                icon: Icons.attach_money,
                label: '‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤',
                color: Colors.green,
              ), // üíº ‡πÄ‡∏°‡∏ô‡∏π‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤
              _BottomBarIcon(
                icon: Icons.verified,
                label: '‡∏ï‡∏£‡∏ß‡∏à‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•',
                color: Colors.blue,
              ), // üèÜ ‡∏ï‡∏£‡∏ß‡∏à‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•
              _BottomBarIcon(
                icon: Icons.search,
                label: '‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏•‡∏Ç',
                color: Color(0xFF80724E),
              ), // üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏•‡∏Ç
              _BottomBarIcon(
                icon: Icons.shopping_cart,
                label: '‡∏ï‡∏£‡∏∞‡∏Å‡∏£‡πâ‡∏≤',
                color: Colors.purple,
              ), // üõí ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
            ],
          ),
        ),
      ),
    );
  }

  Widget _summaryRow(String label, String value) => Container(
    // üìä ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°
    height: 48,
    padding: const EdgeInsets.symmetric(horizontal: 16),
    decoration: BoxDecoration(
      color: const Color.fromARGB(255, 253, 214, 136), // üé® ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏Å‡∏•‡πà‡∏≠‡∏á
      borderRadius: BorderRadius.circular(14),
    ),
    child: Row(
      mainAxisAlignment: MainAxisAlignment.spaceBetween,
      children: [
        Text(
          label,
          style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
        ),
        Text(
          value,
          style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
        ),
      ],
    ),
  );
}

class _CartItemTile extends StatelessWidget {
  // üßæ ‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡∏ö checkbox ‡∏≠‡∏¢‡∏π‡πà‡∏ô‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡πå‡∏î
  const _CartItemTile({
    required this.item,
    required this.onChangedSelected,
    required this.onChangedNumber,
  });

  final CartItem item; // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏∏‡∏î
  final ValueChanged<bool?> onChangedSelected; // toggle ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å/‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  final ValueChanged<String>
  onChangedNumber; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏•‡∏Ç (‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡∏£‡∏±‡∏ö callback ‡πÑ‡∏ß‡πâ ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï)

  // üîß ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡∏£‡∏£‡∏Ñ ‡πÄ‡∏ä‡πà‡∏ô "1 2 3 4 5 6"
  String _formatDigits(String s) {
    final digits = s.replaceAll(RegExp(r'[^0-9]'), '');
    final six = digits.length > 6 ? digits.substring(0, 6) : digits;
    return six.split('').join(' ');
  }

  @override
  Widget build(BuildContext context) {
    final red = const Color(0xFFD92323); // ‡∏™‡∏µ‡πÅ‡∏î‡∏á‡πÉ‡∏ô‡∏†‡∏≤‡∏û
    final gold = const Color(0xFFFFD97B); // ‡∏™‡∏µ‡∏ó‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏ö‡∏ô‡∏≠‡∏Å

    return Row(
      crossAxisAlignment: CrossAxisAlignment.center,
      children: [
        // ‚¨ÖÔ∏è ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏ï‡∏¥‡πä‡∏Å‡∏≠‡∏¢‡∏π‡πà ‚Äú‡∏ô‡∏≠‡∏Å‚Äù ‡∏Å‡∏≤‡∏£‡πå‡∏î
        _TickBox(
          checked: item.selected,
          onTap: () => onChangedSelected(!item.selected),
        ),
        const SizedBox(width: 8),

        // üü® ‡∏Å‡∏£‡∏≠‡∏ö‡∏ó‡∏≠‡∏á + üü• ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÅ‡∏î‡∏á
        Expanded(
          child: Container(
            margin: const EdgeInsets.only(bottom: 16),
            padding: const EdgeInsets.all(6),
            decoration: BoxDecoration(
              color: gold,
              borderRadius: BorderRadius.circular(24),
            ),
            child: Container(
              padding: const EdgeInsets.fromLTRB(16, 12, 16, 16),
              decoration: BoxDecoration(
                color: red,
                borderRadius: BorderRadius.circular(20),
              ),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    '‡∏ä‡∏∏‡∏î‡∏ó‡∏µ‡πà ${item.id}',
                    style: const TextStyle(
                      color: Colors.white,
                      fontWeight: FontWeight.w900,
                      fontSize: 16,
                    ),
                  ),
                  const SizedBox(height: 10),
                  Row(
                    children: [
                      Expanded(
                        child: Container(
                          height: 52,
                          padding: const EdgeInsets.symmetric(horizontal: 16),
                          decoration: BoxDecoration(
                            color: Colors.white,
                            borderRadius: BorderRadius.circular(18),
                            boxShadow: const [
                              BoxShadow(
                                color: Colors.black26,
                                blurRadius: 8,
                                offset: Offset(0, 4),
                              ),
                            ],
                          ),
                          alignment: Alignment.centerLeft,
                          child: Text(
                            _formatDigits(
                              item.number.isNotEmpty ? item.number : '123456',
                            ),
                            style: const TextStyle(
                              fontWeight: FontWeight.w700,
                              fontSize: 22,
                              color: Colors.black87,
                            ),
                            maxLines: 1,
                            overflow: TextOverflow.clip,
                          ),
                        ),
                      ),
                      const SizedBox(width: 16),
                      const Text(
                        '‡∏£‡∏≤‡∏Ñ‡∏≤',
                        style: TextStyle(
                          color: Colors.white,
                          fontWeight: FontWeight.w900,
                          fontSize: 16,
                        ),
                      ),
                      const SizedBox(width: 8),
                      Container(
                        padding: const EdgeInsets.symmetric(
                          horizontal: 16,
                          vertical: 6,
                        ),
                        decoration: BoxDecoration(
                          color: Colors.white,
                          borderRadius: BorderRadius.circular(999),
                        ),
                        child: Text(
                          '${item.price}',
                          style: const TextStyle(
                            fontWeight: FontWeight.w900,
                            fontSize: 16,
                            color: Colors.black,
                          ),
                        ),
                      ),
                      const SizedBox(width: 8),
                      const Text(
                        '‡∏ö‡∏≤‡∏ó',
                        style: TextStyle(
                          color: Colors.white,
                          fontWeight: FontWeight.w900,
                          fontSize: 16,
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ),
        ),
      ],
    );
  }
}

class _TickBox extends StatelessWidget {
  const _TickBox({required this.checked, required this.onTap});

  final bool checked;
  final VoidCallback onTap;

  @override
  Widget build(BuildContext context) {
    return InkWell(
      borderRadius: BorderRadius.circular(8),
      onTap: onTap,
      child: Container(
        width: 32,
        height: 32,
        decoration: BoxDecoration(
          color: checked ? const Color(0xFFD92323) : Colors.white,
          borderRadius: BorderRadius.circular(10),
          border: Border.all(color: const Color(0xFFD92323), width: 2),
        ),
        alignment: Alignment.center,
        child: Icon(
          Icons.check,
          size: 20,
          color: checked ? Colors.white : Colors.transparent,
        ),
      ),
    );
  }
}

class _BottomBarIcon extends StatelessWidget {
  const _BottomBarIcon({
    required this.icon,
    required this.label,
    required this.color,
  });

  final IconData icon;
  final String label;
  final Color color;

  @override
  Widget build(BuildContext context) {
    return Column(
      mainAxisAlignment: MainAxisAlignment.center,
      children: [
        CircleAvatar(
          backgroundColor: color,
          radius: 18,
          child: Icon(icon, size: 20, color: Colors.white),
        ),
        const SizedBox(height: 4),
        Text(label, style: const TextStyle(color: Colors.white, fontSize: 12)),
      ],
    );
  }
}
